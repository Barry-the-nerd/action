name: Approve and Push to Prod

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to deploy to production'
        required: false
        default: '' # Leave this blank to be set dynamically

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Build Tag
      id: vars
      run: |
        TIMESTAMP=$(date +'%Y%m%d%H%M%S')
        TAG="${{ github.event.inputs.tag }}"
        if [ -z "$TAG" ]; then
          TAG=latest
          IS_DEFAULT_TAG=true
        else
          IS_DEFAULT_TAG=false
        fi
        echo "TAG=$TAG" >> $GITHUB_ENV
        echo "TIMESTAMP=$TIMESTAMP" >> $GITHUB_ENV
        echo "IS_DEFAULT_TAG=$IS_DEFAULT_TAG" >> $GITHUB_ENV

    - name: Display Tag for Confirmation
      if: ${{ github.event_name == 'workflow_dispatch' }}
      run: |
        echo "Using tag: ${{ env.TAG }}"

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

    - name: Pull dev image
      run: docker pull stellarhub/dev-target:${{ env.TAG }}

    - name: Tag and push image to prod
      run: |
        if [ "${{ env.IS_DEFAULT_TAG }}" = "true" ]; then
          docker tag stellarhub/dev-target:latest stellarhub/prod-target:${{ env.TIMESTAMP }}
          docker tag stellarhub/dev-target:latest stellarhub/prod-target:latest
          docker push stellarhub/prod-target:${{ env.TIMESTAMP }}
          docker push stellarhub/prod-target:latest
        else
          docker tag stellarhub/dev-target:${{ env.TAG }} stellarhub/prod-target:${{ env.TAG }}
          docker tag stellarhub/dev-target:${{ env.TAG }} stellarhub/prod-target:latest
          docker push stellarhub/prod-target:${{ env.TAG }}
          docker push stellarhub/prod-target:latest
        fi

    - name: Save tag information
      run: |
        if [ "${{ env.IS_DEFAULT_TAG }}" = "true" ]; then
          echo "Prod Tag: ${{ env.TIMESTAMP }}" > prod-build-info.txt
          echo "Prod Tag: latest" >> prod-build-info.txt
        else
          echo "Prod Tag: ${{ env.TAG }}" > prod-build-info.txt
          echo "Prod Tag: latest" >> prod-build-info.txt

    - name: Upload build info as artifact
      uses: actions/upload-artifact@v2
      with:
        name: prod-build-info
        path: prod-build-info.txt
