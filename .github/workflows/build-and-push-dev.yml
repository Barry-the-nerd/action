name: Build and Push to Dev # this is shown in the workflow run

on:
  push:
    paths:
      - '/Dockerfile' # use 'Dockerfile' for any Dockerfile in the repo
      - '.github/workflows/build-and-push-dev.yml' # Trigger when yml is updated
        # the commit message is shown in the workflow run
    branches:
      - main # Change to main branch
  schedule:
    - cron: '0 2 * * *' # Nightly build at 2am
  workflow_dispatch:  # Allows manual triggering

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Build Timestamp
      id: vars
      run: |
        TIMESTAMP=$(date +'%Y%m%d%H%M%S')
        echo "TIMESTAMP=$TIMESTAMP" >> $GITHUB_ENV

    # do not use command directly for security reasons
    # password will be stored unencrypted in /home/runner/.docker/config.json.
    # use docker/login-action instead
    # - name: Log in to Docker Hub
    #  run: echo "${{ secrets.DOCKER_ACCESS_TOKEN }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
    - name: Login to Docker Hub
    uses: docker/login-action@v2
    with:
      username: ${{ secrets.DOCKER_USERNAME }}
      password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

    - name: Build Docker image
      run: docker build -t stellarhub/dev-target:${{ env.TIMESTAMP }} .

    - name: Push Docker image
      run: docker push stellarhub/dev-target:${{ env.TIMESTAMP }}

    - name: Update latest tag
      run: |
        docker tag stellarhub/dev-target:${{ env.TIMESTAMP }} stellarhub/dev-target:latest
        docker push stellarhub/dev-target:latest

    - name: Save Dockerfile and tag information
      run: |
        echo "Build Tag: ${{ env.TIMESTAMP }}" > build-info.txt
        cp Dockerfile dockerfile-${{ env.TIMESTAMP }}
      shell: bash

    - name: Upload Dockerfile and build tag as artifact
      uses: actions/upload-artifact@v2
      with:
        name: dockerfile-and-tag
        path: |
          build-info.txt
          dockerfile-${{ env.TIMESTAMP }}
