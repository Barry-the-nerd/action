name: Build and Push to Dev # this is shown in the workflow run

on:
  push:
    paths:
      - '/Dockerfile' # use 'Dockerfile' for any Dockerfile in the repo
      - '.github/workflows/build-and-push-dev.yml' # Trigger when yml is updated
        # the commit message is shown in the workflow run
    branches:
      - main # Change to main branch
  schedule:
    - cron: '0 2 * * *' # Nightly build at 2am
  workflow_dispatch:  # Allows manual triggering
    inputs:
      tag:
        description: 'Tag for the Docker image'
        required: false
        default: '' # Leave this blank to be set dynamically

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Build Tag
      id: vars
      run: |
        TIMESTAMP=$(date +'%Y%m%d%H%M%S')
        TAG="${{ github.event.inputs.tag }}"
        if [ -z "$TAG" ]; then
          TAG=$TIMESTAMP
        fi
        echo "TAG=$TAG" >> $GITHUB_ENV

    - name: Display Tag for Confirmation
      if: ${{ github.event_name == 'workflow_dispatch' }}
      run: |
        echo "Using tag: $TAG"

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

    - name: Build Docker image
      run: docker build -t stellarhub/dev-target:${{ env.TAG }} .

    - name: Push Docker image
      run: docker push stellarhub/dev-target:${{ env.TAG }}

    - name: Update latest tag
      run: |
        docker tag stellarhub/dev-target:${{ env.TAG }} stellarhub/dev-target:latest
        docker push stellarhub/dev-target:latest

    - name: Save Dockerfile and tag information
      run: |
        echo "Build Tag: ${{ env.TAG }}" > build-info.txt
        cp Dockerfile dockerfile-${{ env.TAG }}
      shell: bash

    - name: Upload Dockerfile and build tag as artifact
      uses: actions/upload-artifact@v2
      with:
        name: dockerfile-and-tag
        path: |
          build-info.txt
          dockerfile-${{ env.TAG }}
